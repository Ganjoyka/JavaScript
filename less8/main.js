// - Створити функцію конструктор для об'єктів User з полями id, name, surname , email, phone
// створити пустий масив, наповнити його 10 об'єктами new User(....)

function User(id, name, surname, email, phone) {
    this.id = id;
    this.name = name;
    this.surname = surname;
    this.email = email;
    this.phone = phone;
    console.log(this)
}

let user1 = new User(5656, `anna`, `fsafsf`, `Vzdnfs@i.com`, `12543588785`)
let user2 = new User(1324, `vlad`, `sfeafes`, `xfgnfng@sss.com`, `12528424586`)
let user3 = new User(3456, `jo`, `safevsdv`, `aetjnfgc@i.com`, `76678468767`)
let user4 = new User(5675, `anton`, `vsda`, `dsnfd@i.com`, `78676786786`)
let user5 = new User(2462, `yana`, `svad`, `bxtfxs@i.com`, `78634534876`)
let user6 = new User(4795, `kate`, `svadsvd`, `ztdf@i.com`, `2354887537`)
let user7 = new User(8990, `jack`, `fsdn`, `rykmxz6@i.com`, `5164979355`)
let user8 = new User(6876, `igor`, `,dfhs`, `arwge@i.com`, `7474554278`)
let user9 = new User(2455, `sasha`, `ndg`, `stn@i.com`, `45474569268`)
let user10 = new User(1435, `pasha`, `sgfn`, `ageijkwmeg@i.com`, `7124556875`)

const arrayUsers = []

arrayUsers.push(user1, user2, user3, user4, user5, user6, user7, user8, user9, user10);


// - Взяти масив з  User[] з попереднього завдання, та відфільтрувати , залишивши тільки об'єкти з парними id (filter)

// let filter = arrayUsers.filter(value => value.id % 2 === 0)
// console.log(filter);

// - Взяти масив з  User[] з попереднього завдання, та відсортувати його по id. по зростанню (sort)

// console.log(arrayUsers.sort((a, b) => a.id - b.id));

// - створити класс для об'єктів Client з полями id, name, surname , email, phone, order (поле є масивом зі списком товарів)
// створити пустий масив, наповнити його 10 об'єктами Client
// - Взяти масив (Client [] з попереднього завдання).Відсортувати його по кількості товарів в полі order по зростанню. (sort)



// - Створити функцію конструктор яка дозволяє створювати об'єкти car, з властивостями модель, виробник, рік випуску, максимальна швидкість, об'єм двигуна. додати в об'єкт функції:
// -- drive () - яка виводить в консоль `їдемо зі швидкістю ${максимальна швидкість} на годину`
// -- info () - яка виводить всю інформацію про автомобіль в форматі `назва поля - значення поля`
// -- increaseMaxSpeed (newSpeed) - яка підвищує значення максимальної швидкості на значення newSpeed
// -- changeYear (newValue) - змінює рік випуску на значення newValue
// -- addDriver (driver) - приймає об'єкт який "водій" з довільним набором полів, і додає його в поточний об'єкт car


// - (Те саме, тільки через клас)
// Створити клас який дозволяє створювати об'єкти car, з властивостями модель, виробник, рік випуску, максимальна швидкість, об'єм двигуна. додати в об'єкт функції:
// -- drive () - яка виводить в консоль `їдемо зі швидкістю ${максимальна швидкість} на годину`
// -- info () - яка виводить всю інформацію про автомобіль в форматі `назва поля - значення поля`
// -- increaseMaxSpeed (newSpeed) - яка підвищує значення максимальної швидкості на значення newSpeed
// -- changeYear (newValue) - змінює рік випуску на значення newValue
// -- addDriver (driver) - приймає об'єкт який "водій" з довільним набором полів, і додає його в поточний об'єкт car


// -створити класс/функцію конструктор попелюшка з полями ім'я, вік, розмір ноги. Створити масив з 10 попелюшок.
// Сторити об'єкт класу "принц" за допомоги класу який має поля ім'я, вік, туфелька яку він знайшов.
//     За допомоги циклу знайти яка попелюшка повинна бути з принцом.
//     Додатково, знайти необхідну попелюшку за допомоги функції масиву find та відповідного колбеку